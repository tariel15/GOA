/*2) კომენტარებით ახსენით რა არის flexbox-layout და მისი ქვე კუთვნილებები: flex-direction, justify-content, align-items, flex-wrap, flex-grow, flex-shrink. დაწერეთ თუ რას აკეთებს justify-content ქვე-კუთვნილების მნიშვენლობები: space-between, space-around, space-evenly. ასევე ახსენით რა არის Main (მთავარი) და Cross (გადამკვეთი) ღერძები*/
/* Flexbox – გამოიყენება ელემენტების მოქნილად და მარტივად გასანაწილებლად. */

/* flex-direction – აყენებს ელემენტებს ღერძის მიმართულებით */
/*flex-direction: row;*/          /* მარცხნიდან მარჯვნივ (default) */
/*flex-direction: column;*/        /* ზემოდან ქვემოთ */

/* justify-content – ანაწილებს ელემენტებს Main ღერძზე (მიმართულება row/column-ზეა დამოკიდებული) */
/*justify-content: space-between;*/ /* პირველი და ბოლო ელემენტი კიდეებზე, შუალედები თანაბარია */
/*justify-content: space-around; */ /* ელემენტებს გარშემო თანაბარი სივრცე აქვთ */
/*justify-content: space-evenly;*/  /* ყველა ელემენტს შორის სივრცე ზუსტად ერთნაირია */

/* align-items – აწყობს ელემენტებს Cross ღერძზე (მოწესრიგება პერპენდიკულარულია flex-direction-ზე) */
/*align-items: center;*/            /* ელემენტები ცენტრში განლაგდებიან */

/* flex-wrap – განსაზღვრავს გადატანას თუ ელემენტები არ ეტევა */
/*flex-wrap: wrap;*/                /* ელემენტები გადადიან ახალ ხაზზე */

/* flex-grow – ზრდის ელემენტის ზომას ხელმისაწვდომი სივრცის მიხედვით */
/*flex-grow: 1; */                  /* უფრო მეტი რიცხვი = მეტი ზრდა */

/* flex-shrink – ამცირებს ელემენტს, როცა სივრცე მცირეა */
/*flex-shrink: 1;*/                 /* მეტად მცირე რიცხვი = ნაკლები შემცირება */

/* Main Axis – მიმართულება, რომლითაც ელემენტები ჯაჭვურად განლაგდებიან (row → ჰორიზონტალურად) */
/* Cross Axis – პერპენდიკულარული ღერძი (row → ვერტიკალურად) */